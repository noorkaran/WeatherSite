{"version":3,"sources":["component/displayweather.js","component/weather.js","App.jsx","index.js"],"names":["DisplayWeather","props","data","iconurl","cod","weather","icon","className","Fragment","name","sys","country","Date","toLocaleTimeString","Math","floor","main","temp","src","alt","srcset","description","temp_max","temp_min","sunrise","sunset","message","Weather","useState","setWeather","city","form","setForm","APIKEY","e","a","preventDefault","alert","fetch","then","res","json","handleChange","target","value","type","placeholder","onChange","onClick","weatherData","undefined","App","ReactDOM","render","document","getElementById"],"mappings":"iPAkEeA,MAhEf,SAAwBC,GACtB,IAAQC,EAASD,EAATC,KACFC,EACJ,8CACgB,MAAbD,EAAKE,IAAcF,EAAKG,QAAQ,GAAGC,KAAO,MAC7C,OACF,OACE,qBAAKC,UAAU,iBAAf,SACgB,MAAbL,EAAKE,IACJ,eAAC,IAAMI,SAAP,WACE,sBAAKD,UAAU,WAAf,UACE,uBAAMA,UAAU,YAAhB,UACGL,EAAKO,KADR,MACiBP,EAAKQ,IAAIC,QAD1B,eAGA,uBAAMJ,UAAU,eAAhB,oBACS,IAAIK,MAAOC,wBAEpB,qBAAIN,UAAU,OAAd,UACGO,KAAKC,MAAMb,EAAKc,KAAKC,KAAO,QAC7B,uCAEF,sBAAMV,UAAU,eAAhB,SAAgCL,EAAKG,QAAQ,GAAGW,OAChD,qBAAKT,UAAU,eAAeW,IAAKf,EAASgB,IAAI,GAAGC,OAAO,KAC1D,sBAAMb,UAAU,sBAAhB,SACGL,EAAKG,QAAQ,GAAGgB,iBAGrB,qBAAKd,UAAU,iBAAf,SACE,qBAAKA,UAAU,WAAf,SACE,kCACE,+BACE,6BACE,4CAEF,6BACE,iCACGO,KAAKC,MAAMb,EAAKc,KAAKM,SAAW,QADnC,IAEGR,KAAKC,MAAMb,EAAKc,KAAKO,SAAW,gBAIvC,+BACE,6BACE,kDAEF,6BACE,iCACG,IAAIX,KAAwB,IAAnBV,EAAKQ,IAAIc,SAAgBX,qBADrC,IAEG,IAAID,KAAuB,IAAlBV,EAAKQ,IAAIe,QAAeZ,uCAShD,qBAAKN,UAAU,WAAf,SACE,6BAAKL,EAAKwB,e,MCWLC,MAnEf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOvB,EAAP,KAAgBwB,EAAhB,KACA,EAAwBD,mBAAS,CAC/BE,KAAM,GACNnB,QAAS,KAFX,mBAAOoB,EAAP,KAAaC,EAAb,KAKMC,EAAS,mCAPE,4CAQjB,WAA2BC,GAA3B,eAAAC,EAAA,yDACED,EAAEE,iBACgB,KAAdL,EAAKD,KAFX,gBAGIO,MAAM,cAHV,sCAKuBC,MAAM,qDAAD,OAC+BP,EAAKD,KADpC,YAC4CC,EAAKpB,QADjD,kBACkEsB,IAEvFM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACrC,GAAD,OAAUA,KATtB,OAKUA,EALV,OAWI2B,EAAW,CAAE3B,KAAMA,IAXvB,4CARiB,sBAuBjB,IAAMwC,EAAe,SAACR,GACpB,IAAIzB,EAAOyB,EAAES,OAAOlC,KAChBmC,EAAQV,EAAES,OAAOC,MAER,SAATnC,GACFuB,EAAQ,2BAAKD,GAAN,IAAYD,KAAMc,KAEd,YAATnC,GACFuB,EAAQ,2BAAKD,GAAN,IAAYpB,QAASiC,MAGhC,OACE,sBAAKrC,UAAU,UAAf,UACE,sBAAMA,UAAU,QAAhB,yBACA,uBACA,iCACE,uBACEsC,KAAK,OACLC,YAAY,OACZrC,KAAK,OACLsC,SAAU,SAACb,GAAD,OAAOQ,EAAaR,MALlC,qBAQE,uBACEW,KAAK,OACLC,YAAY,UACZrC,KAAK,UACLsC,SAAU,SAACb,GAAD,OAAOQ,EAAaR,MAEhC,wBAAQ3B,UAAU,aAAayC,QAAS,SAACd,GAAD,OApD7B,2CAoDoCe,CAAYf,IAA3D,iCAMgBgB,IAAjB7C,EAAQH,KACP,8BACE,cAAC,EAAD,CAAgBA,KAAMG,EAAQH,SAE9B,SCvDKiD,EARH,WACR,OACI,mCACI,cAAC,EAAD,O,QCDZC,IAASC,OACL,mCACA,cAAC,IAAD,UACI,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.34f793a0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./css/displayweather.css\";\r\nfunction DisplayWeather(props) {\r\n  const { data } = props;\r\n  const iconurl =\r\n    \"http://openweathermap.org/img/wn/\" +\r\n    `${data.cod !== 404 ? data.weather[0].icon : null}` +\r\n    \".png\";\r\n  return (\r\n    <div className=\"displayweather\">\r\n      {data.cod !== 404 ? (\r\n        <React.Fragment>\r\n          <div className=\"maincard\">\r\n            <span className=\"cardtitle\">\r\n              {data.name} , {data.sys.country}. Weather\r\n            </span>\r\n            <span className=\"cardsubtitle\">\r\n              As of {new Date().toLocaleTimeString()}\r\n            </span>\r\n            <h1 className=\"temp\">\r\n              {Math.floor(data.main.temp - 273.15)}\r\n              <sup>o</sup>\r\n            </h1>\r\n            <span className=\"weather-main\">{data.weather[0].main}</span>\r\n            <img className=\"weather-icon\" src={iconurl} alt=\"\" srcset=\"\" />\r\n            <span className=\"weather-description\">\r\n              {data.weather[0].description}\r\n            </span>\r\n          </div>\r\n          <div className=\"weatherdetails\">\r\n            <div className=\"section1\">\r\n              <table>\r\n                <tr>\r\n                  <td>\r\n                    <h4>High/Low</h4>\r\n                  </td>\r\n                  <td>\r\n                    <span>\r\n                      {Math.floor(data.main.temp_max - 273.15)}/\r\n                      {Math.floor(data.main.temp_min - 273.15)}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <h4>Sunrise/Sunset</h4>\r\n                  </td>\r\n                  <td>\r\n                    <span>\r\n                      {new Date(data.sys.sunrise * 1000).toLocaleTimeString()}/\r\n                      {new Date(data.sys.sunset * 1000).toLocaleTimeString()}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      ) : (\r\n        <div className=\"maincard\">\r\n          <h2>{data.message}</h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default DisplayWeather;","import React, { useState } from \"react\";\r\nimport DisplayWeather from \"./displayweather\";\r\nimport \"./css/weather.css\";\r\n\r\nfunction Weather() {\r\n  const [weather, setWeather] = useState([]);\r\n  const [form, setForm] = useState({\r\n    city: \"\",\r\n    country: \"\",\r\n  });\r\n\r\n  const APIKEY = \"5b8c6967766cb1829b4558aed1debdb0\";\r\n  async function weatherData(e) {\r\n    e.preventDefault();\r\n    if (form.city === \"\") {\r\n      alert(\"Add values\");\r\n    } else {\r\n      const data = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&APPID=${APIKEY}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => data);\r\n\r\n      setWeather({ data: data });\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    if (name === \"city\") {\r\n      setForm({ ...form, city: value });\r\n    }\r\n    if (name === \"country\") {\r\n      setForm({ ...form, country: value });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"weather\">\r\n      <span className=\"title\">Weather App</span>\r\n      <br />\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"City\"\r\n          name=\"city\"\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        &nbsp; &nbsp; &nbsp;&nbsp;\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Country\"\r\n          name=\"country\"\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        <button className=\"getweather\" onClick={(e) => weatherData(e)}>\r\n          Get Weather\r\n        </button>\r\n      </form>\r\n\r\n      {/* {console.log(weather)} */}\r\n      {weather.data !== undefined ? (\r\n        <div>\r\n          <DisplayWeather data={weather.data} />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;","import React from 'react';\nimport Tempapp from \"./component/weather\";\n\nconst App = () => {\n    return(\n        <>\n            <Tempapp/>\n        </>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <>\n    <BrowserRouter>    \n        <App/>\n    </BrowserRouter>\n    </>,\n    document.getElementById('root')\n);"],"sourceRoot":""}